name: Docker Build and Push

on:
  push:
    branches:
      - main

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          # GitHub Actions 有一个内置的保护机制，为了防止无限循环，由 GITHUB_TOKEN（Actions 运行时自动生成的令牌）触发的 git push 事件，默认情况下不会再次触发同一个仓库中监听 push 事件的工作流程。
          # 使用 PAT 进行 checkout，以便后续可以推送
          token: ${{ secrets.ACTIONS_PAT }}

      # - name: 登录到Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: 构建和推送Docker镜像
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: false
      #     tags: |
      #       ${{ secrets.DOCKER_USERNAME }}/my-app:latest
      #       ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}

      - name: 运行容器
        # timeout-minutes: 10
        run: |
          # 定义清理函数
          cleanup() {
            echo "工作流程被取消，执行清理..."
            docker stop frpc
            echo "清理完成"
          }

          # 捕获 SIGTERM 和 SIGINT 信号
          trap cleanup SIGTERM SIGINT

          curl ipinfo.io
          df -h

          curl -L "https://github.com/docker/compose/releases/download/v2.24.7/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          
          echo "Run ID: ${{ github.run_id }}"
          sed -i -e 's/USER/${{ github.actor }}/' -e 's/PROXY1/PROXY1#${{ github.run_id }}/' -e 's/PROXY2/PROXY2#${{ github.run_id }}/' ./frpc.toml
          cat ./frpc.toml
          docker run -d \
          --name frpc \
          -v ./frpc.toml:/etc/frp/frpc.toml \
          --add-host host.docker.internal:172.17.0.1 \
          snowdreamtech/frpc
          docker run -d -p 8388:1234 --restart=always alpine/socat TCP-LISTEN:1234,fork TCP:8.217.1.158:8388
          
          cd gamecenter
          docker-compose up -d mongo
          sleep 10
          docker-compose up -d app
          docker-compose logs -f app
          cd ..

          sleep 3600
          
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          echo "$(curl https://api.ipify.org)" >> README.md
          git add README.md
          git commit -m "Update README via GitHub Actions"
          # git push origin main
          git push https://x-access-token:${{ secrets.ACTIONS_PAT }}@github.com/${{ github.repository }}.git main
